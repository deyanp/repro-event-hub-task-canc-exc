{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namespace": {
            "type": "String"
        },
        "eventHubNames": {
            "type": "array"
        },
        "consumerGroupNames": {
            "type": "array",
            "defaultValue": [
                "$Default",
                "dataexplorer",
                "eventhubviewer"
            ]    
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "partitionCounts" : {
            "type":"array"
        },
        "messageRetentionInDays": {
            "type":"int",
            "defaultValue": 1
        },
        "skuTier": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "skuName": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "skuCapacity": {
            "type": "int",
            "defaultValue": 1
        }
    },
    "variables": {
        "consumerGroupsCount": "[mul(length(parameters('eventHubNames')), length(parameters('consumerGroupNames')))]"
    },
    "resources": [
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[parameters('namespace')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('skuName')]",
                "tier": "[parameters('skuTier')]",
                "capacity": "[int(parameters('skuCapacity'))]"
            },
            "properties": {
                "zoneRedundant": true,
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0,
                "kafkaEnabled": true
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespace'), '/default')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespace'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespace'), '/RootManageSharedAccessKey')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespace'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/networkRuleSets",
            "apiVersion": "2018-01-01-preview",
            "name": "[concat(parameters('namespace'), '/default')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespace'))]"
            ],
            "properties": {
                "defaultAction": "Deny",
                "virtualNetworkRules": [],
                "ipRules": []
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespace'), '/', parameters('eventHubNames')[copyIndex()])]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespace'))]"
            ],
            "properties": {
                "messageRetentionInDays": "[int(parameters('messageRetentionInDays'))]",
                "partitionCount": "[int(parameters('partitionCounts')[copyIndex()])]",
                "status": "Active"
            },
            "copy":{
                "name": "event-hubs-copy",
                "count": "[length(parameters('eventHubNames'))]"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespace'), '/', parameters('eventHubNames')[copyIndex()], '/default')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespace'), parameters('eventHubNames')[copyIndex()])]",
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespace'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Send"
                ]
            },
            "copy":{
                "name": "event-hubs-copy",
                "count": "[length(parameters('eventHubNames'))]"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespace'), '/', parameters('eventHubNames')[mod(copyIndex(),length(parameters('eventHubNames')))], '/', parameters('consumerGroupNames')[div(copyIndex(),length(parameters('eventHubNames')))])]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespace'), parameters('eventHubNames')[mod(copyIndex(),length(parameters('eventHubNames')))])]",
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespace'))]"
            ],
            "properties": {},
            "copy":{
                "name": "consumer-groups-copy",
                "count": "[variables('consumerGroupsCount')]"
            }
        }
    ]
}